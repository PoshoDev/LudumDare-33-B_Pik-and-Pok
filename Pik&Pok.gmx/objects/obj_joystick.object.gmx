<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>joy_up_1 =          false;
joy_right_1 =       false;
joy_down_1 =        false;
joy_left_1 =        false;
joy_button_3_1 =    false;
joy_button_2_1 =    false;

joy_up_2 =          false;
joy_right_2 =       false;
joy_down_2 =        false;
joy_left_2 =        false;
joy_button_3_2 =    false;
joy_button_2_2 =    false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player 1

switch (joystick_direction(1)) {
  case 101:
    if (joy_right_1 = true) {          // Joystick release right
      joy_right_1 = false;
      keyboard_key_release(vk_right);
    }
    if (joy_left_1 = true) {          // Joystick release left
      joy_left_1 = false;
      keyboard_key_release(vk_left);
    }
    if (joy_up_1 = true) {          // Joystick release up
      joy_up_1 = false;
      keyboard_key_release(vk_up);
    }
    if (joy_down_1 = true) {          // Joystick release down
      joy_down_1 = false;
      keyboard_key_release(vk_down);
    }

    break;
  case 102:          // Joystick press right
    joy_right_1 = true;
    keyboard_key_press(vk_right);
    break;
  case 100:          // Joystick press left
    joy_left_1 = true;
    keyboard_key_press(vk_left);
    break;
  case 104:          // Joystick press up
    joy_up_1 = true;
    keyboard_key_press(vk_up);
    break;
  case 98:          // Joystick press down
    joy_down_1 = true;
    keyboard_key_press(vk_down);
    break;
}

if joystick_check_button(1,3) then  // Joystick press button 3
  {if joy_button_3_1=0 then
    {joy_button_3_1=1}
        keyboard_key_press(ord("X"))}
else
  {if joy_button_3_1=1 then           // Joystick release button 3
    {joy_button_3_1=0
        keyboard_key_release(ord("X"))}}
if joystick_check_button(1,2) then  // Joystick press button 2
  {if joy_button_2_1=0 then
    {joy_button_2_1=1}
        keyboard_key_press(ord("Z"))}
else
  {if joy_button_2_1=1 then           // Joystick release button 2
    {joy_button_2_1=0
        keyboard_key_release(ord("Z"))}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player 2

switch (joystick_direction(2)) {
  case 101:
    if (joy_right_2 = true) {          // Joystick release right
      joy_right_2 = false;
      keyboard_key_release(ord('D'));
    }
    if (joy_left_2 = true) {          // Joystick release left
      joy_left_2 = false;
      keyboard_key_release(ord('A'));
    }
    if (joy_up_2 = true) {          // Joystick release up
      joy_up_2 = false;
      keyboard_key_release(ord('W'));
    }
    if (joy_down_2 = true) {          // Joystick release down
      joy_down_2 = false;
      keyboard_key_release(ord('S'));
    }

    break;
  case 102:          // Joystick press right
    joy_right_2 = true;
    keyboard_key_press(ord('D'));
    break;
  case 100:          // Joystick press left
    joy_left_2 = true;
    keyboard_key_press(ord('A'));
    break;
  case 104:          // Joystick press up
    joy_up_2 = true;
    keyboard_key_press(ord('W'));
    break;
  case 98:          // Joystick press down
    joy_down_2 = true;
    keyboard_key_press(ord('S'));
    break;
}

if joystick_check_button(2,3) then  // Joystick press button 3
  {if joy_button_3_2=0 then
    {joy_button_3_2=1}
        keyboard_key_press(ord('B'))}
else
  {if joy_button_3_2=1 then           // Joystick release button 3
    {joy_button_3_2=0
        keyboard_key_release(ord('B'))}}
if joystick_check_button(2,2) then  // Joystick press button 2
  {if joy_button_2_2=0 then
    {joy_button_2_2=1}
        keyboard_key_press(ord('V'))}
else
  {if joy_button_2_2=1 then           // Joystick release button 2
    {joy_button_2_2=0
        keyboard_key_release(ord('V'))}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
